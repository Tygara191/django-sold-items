# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-21 10:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import likert_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='Дата на създаване')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Дата на редакция')),
                ('cat_name', models.CharField(max_length=255, verbose_name='Име на категорията')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='Дата на създаване')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Дата на редакция')),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Стара цена')),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Нова цена')),
                ('time_end', models.DateTimeField(verbose_name='Кога изтича намалението')),
            ],
            options={
                'verbose_name': 'намаление',
                'verbose_name_plural': 'намаления',
            },
        ),
        migrations.CreateModel(
            name='EnergyClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Пример: A++', max_length=255, verbose_name='Клас')),
            ],
            options={
                'verbose_name': 'енергиен клас',
                'verbose_name_plural': 'енергийни класове',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='Дата на създаване')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Дата на редакция')),
                ('person_name', models.CharField(max_length=255, verbose_name='Име')),
                ('feedback_text', models.TextField(verbose_name='Текст')),
                ('feedback_rating', likert_field.models.LikertField(blank=True, null=True, verbose_name='Оценка')),
            ],
            options={
                'verbose_name': 'отзив',
                'verbose_name_plural': 'отзиви',
            },
        ),
        migrations.CreateModel(
            name='Klimatik',
            fields=[
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='Дата на създаване')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Дата на редакция')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер')),
                ('title', models.CharField(max_length=255, verbose_name='Име')),
                ('slug', models.SlugField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='klimatici', verbose_name='Снимка с високо качество')),
                ('available', models.BooleanField(verbose_name='В наличност')),
                ('guarantee_months', models.IntegerField(verbose_name='Гаранционен период в месеци')),
                ('description', models.TextField(verbose_name='Описание')),
                ('power', models.IntegerField(help_text='Мерна единица: BTU', null=True, verbose_name='Мощност')),
                ('output_power_warm', models.CharField(help_text='Мерна единица: kW', max_length=255, null=True, verbose_name='Отдавана мощност(отопление)')),
                ('output_power_cold', models.CharField(help_text='Мерна единица: kW', max_length=255, null=True, verbose_name='Отдавана мощност(охлаждане)')),
                ('consumed_power_warm', models.CharField(help_text='Мерна единица: kW', max_length=255, null=True, verbose_name='Консумирана мощност(отопление)')),
                ('consumed_power_cold', models.CharField(help_text='Мерна единица: kW', max_length=255, null=True, verbose_name='Консумирана мощност(охлаждане)')),
                ('input_voltage', models.CharField(help_text='Мерна единица: V', max_length=255, null=True, verbose_name='Входно напрежение')),
                ('inside_size', models.CharField(help_text='Мерна единица: MM', max_length=255, null=True, verbose_name='Размери на вътрешното тяло Ш x В x Д')),
                ('outside_size', models.CharField(help_text='Мерна единица: MM', max_length=255, null=True, verbose_name='Размери на външното тяло Ш x В x Д')),
                ('inside_weight', models.DecimalField(decimal_places=2, help_text='Мерна единица: Кг.', max_digits=8, null=True, verbose_name='Тегло на вътрешното тяло')),
                ('outside_weight', models.DecimalField(decimal_places=2, help_text='Мерна единица: Кг.', max_digits=8, null=True, verbose_name='Тегло на външното тяло')),
                ('cold_agent', models.CharField(max_length=255, null=True, verbose_name='Хладилен агент')),
                ('origin', models.CharField(help_text='Пример: Германия', max_length=255, null=True, verbose_name='Произход')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sold_items.Category', verbose_name='Категория')),
                ('energy_class_cold', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='klimatici_cold', to='sold_items.EnergyClass', verbose_name='Енергиен клас охлаждане')),
                ('energy_class_warm', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='klimatici_warm', to='sold_items.EnergyClass', verbose_name='Енергиен клас отопление')),
            ],
            options={
                'verbose_name': 'климатик',
                'verbose_name_plural': 'климатици',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='Дата на създаване')),
                ('date_edit', models.DateTimeField(auto_now=True, verbose_name='Дата на редакция')),
                ('name', models.CharField(max_length=255, verbose_name='Име на производителя')),
                ('image', models.ImageField(upload_to='manufacturers', verbose_name='Лого на производителя')),
            ],
            options={
                'verbose_name': 'производител',
                'verbose_name_plural': 'производители',
            },
        ),
        migrations.CreateModel(
            name='PlaceSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low_limit', models.IntegerField(verbose_name='От (кв.м)')),
                ('high_limit', models.IntegerField(verbose_name='До (кв.м)')),
            ],
            options={
                'verbose_name': 'размер',
                'verbose_name_plural': 'размери',
            },
        ),
        migrations.AddField(
            model_name='klimatik',
            name='manufacturer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='klimatici', to='sold_items.Manufacturer', verbose_name='Производител'),
        ),
        migrations.AddField(
            model_name='klimatik',
            name='places_size',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='klimatici', to='sold_items.PlaceSize', verbose_name='Размер на помещенията'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='klimatik',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='sold_items.Klimatik', verbose_name='Климатик'),
        ),
        migrations.AddField(
            model_name='discount',
            name='klimatik',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discount_inner', to='sold_items.Klimatik', verbose_name='Климатик'),
        ),
    ]
